name: Build and Deploy Pelican site
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    inputs:
      test-settings:
        type: string
        description: "Settings file to use for testing"
        default: "pelicanconf.py"
      settings:
        type: string
        description: "Settings file to use for building"
        default: "publishconf.py"
      output-path:
        type: string
        description: "Path to output directory"
        default: "output"
permissions:
  contents: read
  pages: write
  id-token: write
jobs:
  Build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install requirements
        run: pip install --no-cache-dir -r requirements.txt
      - name: Build Pelican site
        run: pelican --settings pelicanconf.py
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "test"
          path: output
          retention-days: 7
  Build:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install requirements
        run: pip install --no-cache-dir -r requirements.txt
      - name: Build Pelican site
        run: pelican --settings publishconf.py
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: "deploy"
          path: output
          retention-days: 1
  Deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    concurrency: deploy
    steps:
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: "deploy"
          path: output
      - name: Install lftp
        run: sudo apt install -y lftp
      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          echo "${{ secrets.DEPLOY_HOST_KEY }}" > ~/.ssh/known_hosts
      - name: Deploy to server
        run: |
          UPLOAD_DIR=$(basename $(mktemp -du))
          OLD_DIR=$(basename $(mktemp -du))
          BASE_DIR=$(dirname ${{ secrets.DEPLOY_DIR }})
          DEPLOY_DIR=$(basename ${{ secrets.DEPLOY_DIR }})
          mv output/ ${UPLOAD_DIR}
          echo "mkdir ${UPLOAD_DIR}" | sftp ${{ secrets.DEPLOY_USERNAME }}@${{ secrets.DEPLOY_HOST }}:${BASE_DIR}
          echo "put -r ${UPLOAD_DIR}" | sftp ${{ secrets.DEPLOY_USERNAME }}@${{ secrets.DEPLOY_HOST }}:${BASE_DIR}
          echo -e "rename ${DEPLOY_DIR} ${OLD_DIR}\nrename ${UPLOAD_DIR} ${DEPLOY_DIR}" | sftp ${{ secrets.DEPLOY_USERNAME }}@${{ secrets.DEPLOY_HOST }}:${BASE_DIR}
          echo "Successfully deployed, deleting temp files now"
          echo "rm -r ${BASE_DIR}/${OLD_DIR}" | lftp -u ${{ secrets.DEPLOY_USERNAME }}, sftp://${{ secrets.DEPLOY_HOST }}
